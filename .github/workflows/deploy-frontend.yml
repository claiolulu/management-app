name: Deploy Frontend to S3

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  DEPLOY_ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'eu-north-1' }}
    
    - name: Build Frontend with Environment Configuration
      run: |
        cd frontend
        npm ci
        
        # Create production environment file with GitHub Secrets
        echo "Creating .env.production with environment variables..."
        cat > .env.production << EOF
        # Production Environment Configuration (Auto-generated by GitHub Actions)
        VITE_API_URL=https://${{ secrets.EC2_HOST }}/api
        VITE_ENVIRONMENT=production
        VITE_ENABLE_DEBUG=false
        VITE_ENABLE_ANALYTICS=true
        VITE_API_TIMEOUT=5000
        VITE_CHUNK_SIZE_WARNING_LIMIT=1000
        EOF
        
        echo "Environment file created:"
        cat .env.production
        
        # Build with production configuration
        npm run build
        
        echo "Frontend build completed successfully!"
        echo "Build output:"
        ls -la dist/
    
    - name: Deploy Frontend to S3 and EC2
      run: |
        cd frontend
        echo "Deploying frontend to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
        
        # Deploy to S3 (backup and CDN)
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }}/ --delete
        
        # Set bucket policy for public read access
        aws s3api put-bucket-policy --bucket ${{ secrets.S3_BUCKET_NAME }} --policy '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": "arn:aws:s3:::'${{ secrets.S3_BUCKET_NAME }}'/*"
            }
          ]
        }' || echo "Warning: Could not set bucket policy. May need manual configuration."
        
        # Configure website hosting
        aws s3 website s3://${{ secrets.S3_BUCKET_NAME }} --index-document index.html --error-document index.html || echo "Website configuration may already exist"
        
        echo "✅ Frontend deployed to S3 successfully!"
    
    - name: Deploy Frontend Files to EC2 Nginx
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          echo "🚀 Deploying frontend files to EC2 Nginx..."
          
          # Download frontend files from S3 to Nginx directory
          sudo rm -rf /var/www/html/*
          aws s3 sync s3://${{ secrets.S3_BUCKET_NAME }}/ /var/www/html/ || {
            echo "❌ Failed to sync from S3, trying Git repository..."
            
            # Fallback: get files from Git repository
            if [ -d "/opt/figma-web-app/.git" ]; then
              cd /opt/figma-web-app && sudo git fetch && sudo git reset --hard origin/main
            else
              sudo rm -rf /opt/figma-web-app
              sudo git clone https://github.com/${{ github.repository }}.git /opt/figma-web-app
            fi
            
            # Build frontend on server if needed
            if [ -d "/opt/figma-web-app/frontend/dist" ]; then
              sudo cp -r /opt/figma-web-app/frontend/dist/* /var/www/html/
            else
              echo "❌ No frontend dist directory found"
              exit 1
            fi
          }
          
          # Set proper permissions
          sudo chown -R www-data:www-data /var/www/html
          sudo find /var/www/html -type f -exec chmod 644 {} \;
          sudo find /var/www/html -type d -exec chmod 755 {} \;
          
          # Verify files were deployed
          echo "Frontend files in /var/www/html:"
          sudo ls -la /var/www/html/
          
          # Test nginx configuration and reload
          sudo nginx -t && sudo systemctl reload nginx || {
            echo "❌ Nginx configuration error"
            sudo nginx -t
            exit 1
          }
          
          echo "✅ Frontend files deployed to EC2 Nginx successfully!"
    
    - name: Frontend Deployment Summary
      run: |
        echo ""
        echo "🎉 Frontend Deployment Completed!"
        echo ""
        echo "🌍 Environment: ${{ env.DEPLOY_ENVIRONMENT }}"
        echo "📅 Deployed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "🔀 Branch: ${{ github.ref_name }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo ""
        echo "📱 Frontend URLs:"
        echo "  • S3 Direct: https://${{ secrets.S3_BUCKET_NAME }}.s3.${{ secrets.AWS_REGION || 'eu-north-1' }}.amazonaws.com"
        echo "  • Main Application: https://${{ secrets.EC2_HOST }} (via Nginx proxy)"
        echo ""
        echo "⚙️  Build Configuration:"
        echo "  • Node.js: 18"
        echo "  • Build Tool: Vite"
        echo "  • Environment: production"
        echo "  • API Endpoint: https://${{ secrets.EC2_HOST }}/api"
        echo ""
        echo "✅ Frontend deployment completed successfully!"

name: Deploy to AWS EC2 (Free Tier)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Build Backend
      run: |
        cd backend
        chmod +x mvnw
        ./mvnw clean package -DskipTests
    
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Colors for output
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[1;33m'
          NC='\033[0m' # No Color
          
          echo -e "${YELLOW}üöÄ Starting deployment...${NC}"
          
          # Stop existing services
          echo -e "${YELLOW}‚èπÔ∏è  Stopping services...${NC}"
          sudo systemctl stop figma-app || true
          sudo systemctl stop nginx || true
          
          # Create backup
          BACKUP_DIR="/opt/figma-web-app-backup-$(date +%Y%m%d_%H%M%S)"
          if [ -d "/opt/figma-web-app" ]; then
            echo -e "${YELLOW}üì¶ Creating backup at $BACKUP_DIR${NC}"
            sudo cp -r /opt/figma-web-app $BACKUP_DIR || true
          fi
          
          # Clone/update repository
          if [ -d "/opt/figma-web-app" ]; then
            echo -e "${YELLOW}üîÑ Updating existing repository...${NC}"
            cd /opt/figma-web-app
            sudo git fetch origin
            sudo git reset --hard origin/main
            sudo git clean -fd
          else
            echo -e "${YELLOW}üì• Cloning repository...${NC}"
            sudo git clone https://github.com/${{ github.repository }}.git /opt/figma-web-app
          fi
          
          cd /opt/figma-web-app
          
          # Build frontend
          echo -e "${YELLOW}üèóÔ∏è  Building frontend...${NC}"
          cd frontend
          sudo npm ci
          sudo npm run build
          
          # Build backend
          echo -e "${YELLOW}üèóÔ∏è  Building backend...${NC}"
          cd ../backend
          sudo chmod +x mvnw
          sudo ./mvnw clean package -DskipTests
          
          # Set permissions
          echo -e "${YELLOW}üîß Setting permissions...${NC}"
          sudo chown -R ubuntu:ubuntu /opt/figma-web-app
          sudo chmod +x /opt/figma-web-app/backend/target/*.jar
          
          # Copy frontend build to nginx
          echo -e "${YELLOW}üìã Copying frontend to nginx...${NC}"
          sudo rm -rf /var/www/html/figma-app
          sudo mkdir -p /var/www/html/figma-app
          sudo cp -r frontend/dist/* /var/www/html/figma-app/
          sudo chown -R www-data:www-data /var/www/html/figma-app
          
          # Start services
          echo -e "${YELLOW}‚ñ∂Ô∏è  Starting services...${NC}"
          sudo systemctl start figma-app
          sudo systemctl start nginx
          
          # Wait for services to start
          sleep 15
          
          # Verify deployment
          echo -e "${YELLOW}‚úÖ Verifying deployment...${NC}"
          
          if sudo systemctl is-active --quiet figma-app; then
            echo -e "${GREEN}‚úÖ Backend service is running${NC}"
          else
            echo -e "${RED}‚ùå Backend service failed to start${NC}"
            sudo systemctl status figma-app
            exit 1
          fi
          
          if sudo systemctl is-active --quiet nginx; then
            echo -e "${GREEN}‚úÖ Nginx is running${NC}"
          else
            echo -e "${RED}‚ùå Nginx failed to start${NC}"
            sudo systemctl status nginx
            exit 1
          fi
          
          # Test endpoints
          echo -e "${YELLOW}üß™ Testing endpoints...${NC}"
          
          # Test backend health
          if curl -f http://localhost:5001/api/auth/health &>/dev/null; then
            echo -e "${GREEN}‚úÖ Backend API is responding${NC}"
          else
            echo -e "${YELLOW}‚ö†Ô∏è  Backend API not responding (may be starting up)${NC}"
          fi
          
          # Test frontend
          if curl -f http://localhost/figma-app/ &>/dev/null; then
            echo -e "${GREEN}‚úÖ Frontend is accessible${NC}"
          else
            echo -e "${RED}‚ùå Frontend is not accessible${NC}"
          fi
          
          echo -e "${GREEN}üéâ Deployment completed successfully!${NC}"
          
          # Cleanup old backups (keep last 3)
          echo -e "${YELLOW}üßπ Cleaning up old backups...${NC}"
          sudo find /opt -name "figma-web-app-backup-*" -type d | sort -r | tail -n +4 | xargs sudo rm -rf || true
          
          echo -e "${GREEN}‚ú® All done!${NC}"

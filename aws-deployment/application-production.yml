server:
  port: 8080
  servlet:
    context-path: /api

spring:
  profiles:
    active: production
  main:
    allow-circular-references: true
  application:
    name: figma-web-app-backend
  
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:figma_app}?createDatabaseIfNotExist=true&useSSL=true&requireSSL=true&verifyServerCertificate=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: never
      continue-on-error: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD}
  
  # Email Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: ${MAIL_HOST:smtp.gmail.com}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000 # 24 hours

# CORS Configuration - Updated for HTTPS
cors:
  allowed-origins: 
    - ${FRONTEND_URL:https://your-domain.com}
    - https://your-domain.com
    - https://www.your-domain.com
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Logging Configuration
logging:
  level:
    com.figma.webapp: INFO
    org.springframework.security: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/figma-app/figma-app.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized

# App Configuration
app:
  frontend:
    url: ${FRONTEND_URL:https://your-domain.com}
  upload:
    path: ${UPLOAD_PATH:/var/uploads/profiles}
